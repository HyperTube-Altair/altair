services:

    backend:
      build: backend
      restart: always
      volumes:
        - ./backend:/app
      env_file:
        - .env
      depends_on:
        db:
          condition: service_healthy
  
    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        restart: always
        env_file:
          - .env
        volumes:
            - ./frontend/public:/app/public
            - ./frontend/src:/app/src
            - ./frontend/.eslintrc.json:/app/.eslintrc.json
            - ./frontend/next-env.d.ts:/app/next-env.d.ts
            - ./frontend/next.config.mjs:/app/next.config.mjs
            - ./frontend/postcss.config.mjs:/app/postcss.config.mjs
            - ./frontend/tailwind.config.ts:/app/tailwind.config.ts
            - ./frontend/tsconfig.json:/app/tsconfig.json

    db:
        image: postgres:12
        restart: always
        ports:
            - "5432:5432" # leave this port open for development purposes
        env_file:
            - .env
        volumes:
            - ./db:/var/lib/postgresql/data
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
          interval: 5s
          timeout: 5s
          retries: 5

    nginx:
        image: nginx:1.17
        restart: always
        ports:
            - "80:80"
        volumes:
            - ./nginx:/etc/nginx/conf.d
        depends_on:
            - frontend
            - db
            - backend

    minio:
      image: bitnami/minio
      restart: always
      env_file:
        - .env
      ports:
        - '9000:9000'
        - '9001:9001'
      volumes:
        - ./blob:/data